# -*- coding: utf-8 -*-import daboimport wxif __name__ == "__main__":	dabo.ui.loadUI("wx")class CklCategoriesBase(dabo.ui.dCheckList):	def initProperties(self):		self._needChoiceUpdate = True	def updateChoices(self):		self._needChoiceUpdate = False		if self.Form.Testing:			self.Choices = ("Test", "Appetizers", "Greens")			self.Keys = (1, 2, 3)			return		self.Choices, self.Keys = self.Form.getCategoryChoicesAndKeys()	def update(self):		self.super()		dabo.ui.callAfterInterval(200, self.doUpdate)	def doUpdate(self):		if self._needChoiceUpdate:			self.updateChoices()class CklCategoriesSelect(CklCategoriesBase):	def initProperties(self):		self.super()		self.Width = 200		self.Height = 250		self.FontSize = 7		self.SaveRestoreValue = True			class CklCategoriesEdit(CklCategoriesBase):	def initProperties(self):		self.super()		self.Width = 200			def doUpdate(self):		self.super()		if self.Form.Testing:			return 		bizParts = self.Form.getBizobj()		bizCategory = bizParts.bizCategory		keyvalues = []		for rownum in bizCategory.bizIterator():			keyvalues.append(bizCategory.Record.catid)		self.KeyValue = keyvalues	def onHit(self, evt):		idx = evt.EventData["index"]		idxKey = self.Keys[idx]		if idxKey in self.KeyValue:			self.Form.addCategory(idxKey)		else:			#check if we want to remove the last category			if len(self.KeyValue) == 0:				wx.MessageBox('Part must have at least one category.\nCheck Uncategorised if none of the categories apply.', 'Warning', wx.OK | wx.ICON_ERROR)				self.doUpdate()			else:				self.Form.delCategory(idxKey)				print len(self.KeyValue)if __name__ == "__main__":	from FrmParts import FrmParts	app = dabo.dApp(MainFormClass=None)	app.setup()	class TestForm(FrmParts):		def afterInit(self): pass	frm = TestForm(Caption="Test Of CklCategories", Testing=True)	test = frm.addObject(CklCategoriesEdit)	frm.Sizer.append(test, 1)	frm.show()	frm.update()	app.start()